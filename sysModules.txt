# /nixos/modules/audio.nix

{ pkgs, ... }:

{
  services.pulseaudio.enable = false;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    #jack.enable = true; # review if i actually need this one

    # This is not valid nix: Essentially, my PC always has the camera active,
    # even when it really should be disabled. With some TLP wizardry I could
    # probably figure it out... for now, don't worry about it.
    # This is apparently a pipewire/wireplumber specific bug. Need to research more.
    #    wireplumber.profiles = {
    #      main = {
    #        monitor.libcamera.enable = false;
    #      };
    #    };
  };

  security.rtkit.enable = true;

  environment.systemPackages = with pkgs; [
    alsa-tools
    pavucontrol
  ];
}
# /nixos/modules/bluetooth.nix

{
  hardware.bluetooth = {
    enable = true;
    powerOnBoot = true;
  };
  services.blueman.enable = true;
}
# /nixos/modules/boot.nix
{ lib, ... }:

with lib;

{
  boot.loader = {
    systemd-boot.enable = false;

    # the "/boot" thing can probably be made more "modular" but igaf rn
    efi = {
      canTouchEfiVariables = true;
      efiSysMountPoint = "/boot";
    };

    grub = {
      enable = true;
      devices = [ "nodev" ];
      efiSupport = true;
      useOSProber = true;

      memtest86 = {
        enable = false;
        # Make Memtest86+, a memory testing program, available from the GRUB boot menu.
        params = [ "onepass" ];
      };
    };
  };
  boot.tmp.cleanOnBoot = true;
}
# /nixos/modules/cxx.nix

{ pkgs, ... }:

{
  environment.systemPackages = with pkgs; [
    clang
    gcc
    meson
    cmake
    gnumake
    cpio
    git
    binutils

    nano
    vim

    python312Full
    zig
  ];

  environment.variables = {
    CC = "clang";
    CXX = "clang++";
  };
}
# /nixos/modules/default.nix

{
  imports = [
    ./audio.nix
    ./bluetooth.nix
    ./boot.nix
    ./cxx.nix
    ./env.nix
    ./home-manager.nix
    ./net.nix
    ./nix.nix
    ./timezone.nix
    ./tools.nix
    ./zram.nix
  ];
}
# /nixos/modules/env.nix

{
  #xdg = {
  #autostart.enable = true;
  #portal = {
  #enable = true;
  #extraPortals = [
  #pkgs.xdg-desktop-portal
  #pkgs.xdg-desktop-portal-gtk
  #];
  #};
  #};

  environment.sessionVariables = rec {
    TERMINAL = "alacritty";
    EDITOR = "nvim";
    XDG_BIN_HOME = "$HOME/.local/bin";
    ROFI_SCREENSHOT_DIR = "$HOME/Media/screenshots";
    PATH = [ "${XDG_BIN_HOME}" ];
    MOZ_USE_XINPUT2 = "1";

    #XDG_SESSION_TYPE = "wayland";
    #GTK_USE_PORTAL = "1";
    #NIXOS_XDG_USE_PORTAL = "1";
  };
}
# /nixos/modules/home-manager.nix

{ inputs, ... }:

{
  imports = [ inputs.home-manager.nixosModules.default ];
  home-manager.backupFileExtension = "backup";
}
# /nixos/modules/net.nix

{ networking.networkmanager.enable = true; }
# /nixos/modules/nix.nix

{
  nix.settings.experimental-features = [
    "nix-command"
    "flakes"
  ];
}
# /nixos/modules/timezone.nix

{
  time.timeZone = "America/Los_Angeles";
  #services.automatic-timezoned.enable = true;

  i18n.defaultLocale = "en_US.UTF-8";
  i18n.extraLocaleSettings = {
    LC_ADDRESS = "en_US.UTF-8";
    LC_IDENTIFICATION = "en_US.UTF-8";
    LC_MEASUREMENT = "en_US.UTF-8";
    LC_MONETARY = "en_US.UTF-8";
    LC_NAME = "en_US.UTF-8";
    LC_NUMERIC = "en_US.UTF-8";
    LC_PAPER = "en_US.UTF-8";
    LC_TELEPHONE = "en_US.UTF-8";
    LC_TIME = "en_US.UTF-8";
  };
}
# /nixos/modules/cxx.nix

{ pkgs, ... }:

{
  environment.systemPackages = with pkgs; [
    acpid # Arguable if needs to be here

    cowsay
    gparted
    ncdu
    lsof
    pciutils
    psmisc
    udisks
    glxinfo
    lshw-gui

    usbutils
    # Consider Toybox
  ];
}
# /nixos/modules/zram.nix

{
  zramSwap = {
    enable = false;
    algorithm = "lz4";
    memoryPercent = 100;
    priority = 999;
  };
}
